{"id":"node_modules/shelljs/src/error.js","dependencies":[{"name":"/Users/anasawadalla/IdeaProjects/CodeControl/handpose/demo/package.json","includedInParent":true,"mtime":1602988587552},{"name":"/Users/anasawadalla/IdeaProjects/CodeControl/handpose/demo/.babelrc","includedInParent":true,"mtime":1602960842458},{"name":"/Users/anasawadalla/IdeaProjects/CodeControl/handpose/demo/node_modules/shelljs/package.json","includedInParent":true,"mtime":1602988035923},{"name":"./common","loc":{"line":1,"column":21},"parent":"/Users/anasawadalla/IdeaProjects/CodeControl/handpose/demo/node_modules/shelljs/src/error.js","resolved":"/Users/anasawadalla/IdeaProjects/CodeControl/handpose/demo/node_modules/shelljs/src/common.js"}],"generated":{"js":"var common = require('./common'); //@\n//@ ### error()\n//@\n//@ Tests if error occurred in the last command. Returns a truthy value if an\n//@ error returned, or a falsy value otherwise.\n//@\n//@ **Note**: do not rely on the\n//@ return value to be an error message. If you need the last error message, use\n//@ the `.stderr` attribute from the last command's return value instead.\n\n\nfunction error() {\n  return common.state.error;\n}\n\nmodule.exports = error;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"node_modules/shelljs/src/error.js","original":{"line":1,"column":0}},{"name":"common","generated":{"line":1,"column":4},"source":"node_modules/shelljs/src/error.js","original":{"line":1,"column":4}},{"generated":{"line":1,"column":10},"source":"node_modules/shelljs/src/error.js","original":{"line":1,"column":10}},{"name":"require","generated":{"line":1,"column":13},"source":"node_modules/shelljs/src/error.js","original":{"line":1,"column":13}},{"generated":{"line":1,"column":20},"source":"node_modules/shelljs/src/error.js","original":{"line":1,"column":20}},{"generated":{"line":1,"column":21},"source":"node_modules/shelljs/src/error.js","original":{"line":1,"column":21}},{"generated":{"line":1,"column":31},"source":"node_modules/shelljs/src/error.js","original":{"line":1,"column":20}},{"generated":{"line":1,"column":32},"source":"node_modules/shelljs/src/error.js","original":{"line":1,"column":0}},{"generated":{"line":1,"column":34},"source":"node_modules/shelljs/src/error.js","original":{"line":3,"column":0}},{"generated":{"line":2,"column":0},"source":"node_modules/shelljs/src/error.js","original":{"line":4,"column":0}},{"generated":{"line":3,"column":0},"source":"node_modules/shelljs/src/error.js","original":{"line":5,"column":0}},{"generated":{"line":4,"column":0},"source":"node_modules/shelljs/src/error.js","original":{"line":6,"column":0}},{"generated":{"line":5,"column":0},"source":"node_modules/shelljs/src/error.js","original":{"line":7,"column":0}},{"generated":{"line":6,"column":0},"source":"node_modules/shelljs/src/error.js","original":{"line":8,"column":0}},{"generated":{"line":7,"column":0},"source":"node_modules/shelljs/src/error.js","original":{"line":9,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/shelljs/src/error.js","original":{"line":10,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/shelljs/src/error.js","original":{"line":11,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/shelljs/src/error.js","original":{"line":12,"column":0}},{"name":"error","generated":{"line":12,"column":9},"source":"node_modules/shelljs/src/error.js","original":{"line":12,"column":9}},{"generated":{"line":12,"column":14},"source":"node_modules/shelljs/src/error.js","original":{"line":12,"column":0}},{"generated":{"line":12,"column":17},"source":"node_modules/shelljs/src/error.js","original":{"line":12,"column":17}},{"generated":{"line":13,"column":0},"source":"node_modules/shelljs/src/error.js","original":{"line":13,"column":2}},{"name":"common","generated":{"line":13,"column":9},"source":"node_modules/shelljs/src/error.js","original":{"line":13,"column":9}},{"generated":{"line":13,"column":15},"source":"node_modules/shelljs/src/error.js","original":{"line":13,"column":15}},{"name":"state","generated":{"line":13,"column":16},"source":"node_modules/shelljs/src/error.js","original":{"line":13,"column":16}},{"generated":{"line":13,"column":21},"source":"node_modules/shelljs/src/error.js","original":{"line":13,"column":9}},{"name":"error","generated":{"line":13,"column":22},"source":"node_modules/shelljs/src/error.js","original":{"line":13,"column":22}},{"generated":{"line":13,"column":27},"source":"node_modules/shelljs/src/error.js","original":{"line":13,"column":2}},{"generated":{"line":14,"column":0},"source":"node_modules/shelljs/src/error.js","original":{"line":14,"column":1}},{"name":"module","generated":{"line":16,"column":0},"source":"node_modules/shelljs/src/error.js","original":{"line":15,"column":0}},{"generated":{"line":16,"column":6},"source":"node_modules/shelljs/src/error.js","original":{"line":15,"column":6}},{"name":"exports","generated":{"line":16,"column":7},"source":"node_modules/shelljs/src/error.js","original":{"line":15,"column":7}},{"generated":{"line":16,"column":14},"source":"node_modules/shelljs/src/error.js","original":{"line":15,"column":0}},{"name":"error","generated":{"line":16,"column":17},"source":"node_modules/shelljs/src/error.js","original":{"line":15,"column":17}},{"generated":{"line":16,"column":22},"source":"node_modules/shelljs/src/error.js","original":{"line":15,"column":0}}],"sources":{"node_modules/shelljs/src/error.js":"var common = require('./common');\n\n//@\n//@ ### error()\n//@\n//@ Tests if error occurred in the last command. Returns a truthy value if an\n//@ error returned, or a falsy value otherwise.\n//@\n//@ **Note**: do not rely on the\n//@ return value to be an error message. If you need the last error message, use\n//@ the `.stderr` attribute from the last command's return value instead.\nfunction error() {\n  return common.state.error;\n}\nmodule.exports = error;\n"},"lineCount":null}},"error":null,"hash":"15e36c72898660a9d3ce952025c66ce7","cacheData":{"env":{}}}